<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculate</title>
    <link rel="stylesheet" href="/output.css">
</head>

<body>
    <h1 class="text-center text-blue-600 text-3xl font-bold p-2">PCR</h1>
    <div class="px-6 py-8 mx-auto flex gap-3 flex-wrap">
        
        <div
            class="w-full ml-5 bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700">
            <div class="p-6 space-y-4 md:space-y-6 sm:p-4">
                <h1 class="text-xl font-bold leading-tight tracking-tight text-gray-900 md:text-2xl dark:text-white">
                    Calculate Report
                </h1>
                <form id="calculateForm" class="space-y-4 md:space-y-6" action="/calculate">
                    <div>
                        <label for="fromDate" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">From
                            Date:</label>
                        <input type="date" name="fromDate" id="fromDate"
                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                            required>
                    </div>
                    <div>
                        <label for="toDate" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">To
                            Date:</label>
                        <input type="date" name="toDate" id="toDate"
                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                            required>
                    </div>
                    <div>
                        <label for="perTestCost"
                            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Enter per Test
                            Cost:</label>
                        <input type="number" name="perTestCost" id="perTestCost"
                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                            required>
                    </div>
                    <div>
                        <label for="purchases"
                            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Enter
                            Purchases:</label>
                        <input type="number" name="purchases" id="purchases"
                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                            required>
                    </div>
                    <div>
                        <label for="expenditures"
                            class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Enter
                            Expenditures:</label>
                        <input type="number" name="expenditures" id="expenditures"
                            class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                            required>
                    </div>
                    <div class="flex items-start">
                        <div class="flex items-center h-5">
                            <input id="terms" aria-describedby="terms" type="checkbox"
                                class="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800"
                                required>
                        </div>
                        <div class="ml-3 text-sm">
                            <label for="terms" class="font-light text-gray-500 dark:text-gray-300">Are you sure?</label>
                        </div>
                    </div>
                    <button type="submit"
                        class="flex w-full justify-center rounded-md bg-indigo-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Update
                        Configuration</button>
                </form>
                <p id="responseMessage" class="mt-4 text-red-500"></p>
            </div>
        </div>
        
    <div class="w-full flex flex-col items-center px-6 py-8 mx-auto">
        <div
            class="w-full ml-5 bg-white rounded-lg shadow dark:border md:mt-0 sm:max-w-md xl:p-0 dark:bg-gray-800 dark:border-gray-700">
            <div class="p-6 space-y-4 md:space-y-6 sm:p-4">
                <div class="text-center text-3xl font-bold">
                   <h1>Results</h1>

                    </div>
                    <div  id="result" class="text-center text-zinc-700 text-2xl">
                </div>
            </div>
        </div>
    </div>
    </div>


    <script>
        document.getElementById('calculateForm').addEventListener('submit', async (event) => {
            event.preventDefault();

            const fromDate = document.getElementById('fromDate').value;
            const toDate = document.getElementById('toDate').value;
            const perTestCost = parseFloat(document.getElementById('perTestCost').value);
            const purchases = parseFloat(document.getElementById('purchases').value);
            const expenditures = parseFloat(document.getElementById('expenditures').value);

            const response = await fetch('/calculate', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    fromDate,
                    toDate,
                    perTestCost,
                    purchases,
                    expenditures
                })
            });

            if (response.ok) {
                const data = await response.json();
                document.getElementById('result').innerHTML = `
                   
                    <p>Total Tests: ${data.totalTests}</p>
                    <p>Total Sales: ${data.totalSales}</p>
                    <p>Total Cost: ${data.totalCost}</p>
                    <p>Profit: ${data.profit}</p>
                    <p>Zulfiqar Share: ${data.zulfiqarShare}</p>
                    <p>Profit After Zulfiqar: ${data.finalProfit}</p>
                    <p>Qasim Lab Payment: ${data.qasimLabPayment}</p>
                    <p>Number of Participants: ${data.numParticipants}</p>
                    <p>Share Per Participant: ${data.sharePerParticipant}</p>
                `;
            } else {
                document.getElementById('result').innerHTML = `<p>Error: ${response.statusText}</p>`;
            }
        });
    </script>
</body>

</html>